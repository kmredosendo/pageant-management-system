// This is the Prisma schema file for the pageant system
// Update the datasource url in your .env file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Event {
  id          Int          @id @default(autoincrement())
  name        String
  date        DateTime
  status      EventStatus @default(ACTIVE)
  contestants Contestant[]
  judges      Judge[]
  criteria    Criteria[]
  scores      Score[]
}

enum EventStatus {
  ACTIVE
  INACTIVE
}

enum Sex {
  MALE
  FEMALE
}

model Contestant {
  id      Int    @id @default(autoincrement())
  number  Int
  name    String
  sex     Sex?
  event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId Int
  scores  Score[]
}

model Judge {
  id      Int    @id @default(autoincrement())
  number  Int
  name    String
  event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId Int
  scores  Score[]
  locked  Boolean @default(false)
}

model Criteria {
  id         Int        @id @default(autoincrement())
  name       String
  identifier String?   @unique // Unique identifier for programmatic use (e.g. 'best-in-talent')
  weight     Float?
  event      Event      @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId    Int
  parentId   Int?       // null for main criteria, set for sub-criteria
  parent     Criteria?  @relation("SubCriteria", fields: [parentId], references: [id])
  subCriterias Criteria[] @relation("SubCriteria")
  autoAssignToAllContestants Boolean @default(false)
  scores     Score[]
}

model Score {
  id           Int       @id @default(autoincrement())
  value        Float
  contestant   Contestant @relation(fields: [contestantId], references: [id], onDelete: Cascade)
  contestantId Int
  judge        Judge     @relation(fields: [judgeId], references: [id], onDelete: Cascade)
  judgeId      Int
  criteria     Criteria  @relation(fields: [criteriaId], references: [id], onDelete: Cascade)
  criteriaId   Int
  event        Event     @relation(fields: [eventId], references: [id])
  eventId      Int
}

model Admin {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  name     String
  // Add more fields as needed
}
